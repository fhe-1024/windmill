<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
 http://www.springframework.org/schema/mvc
 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
 http://www.springframework.org/schema/context
 http://www.springframework.org/schema/context/spring-context-4.0.xsd
 http://www.springframework.org/schema/websocket
 http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd
 http://www.springframework.org/schema/task
 http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	<!-- <context:annotation-config> declares support for general annotations 
		such as @Required, @Autowired, @PostConstruct, and so on. <mvc:annotation-driven 
		/> declares explicit support for annotation-driven MVC controllers (i.e. 
		@RequestMapping, @Controller, although support for those is the default behaviour), 
		as well as adding support for declrative validation via @Valid and message 
		body marshalling with @RequestBody/ResponseBody. -->
	<mvc:annotation-driven />
	
	<!-- schedule -->
	<task:annotation-driven/>
	<bean id="Task" class="com.mdc.schedule.Task"></bean>
	<!-- <context:annotation-config /> -->

	<!-- Scans for annotated @Controllers in the classpath -->
	<!-- The use of <context:component-scan> implicitly enables the functionality 
		of <context:annotation-config>. There is usually no need to include the <context:annotation-config> 
		element when using <context:component-scan>. -->
	<!-- http://stackoverflow.com/questions/7414794 -->
	<context:component-scan base-package="com.mdc"
		use-default-filters="false">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- the mvc resources tag does the magic -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- JSTL resolver -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>


	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="1000000" />
	</bean>
	
	<websocket:message-broker>
		<websocket:stomp-endpoint path="/hello">
			<websocket:sockjs/>
		</websocket:stomp-endpoint>
		<websocket:simple-broker prefix="/topic,/queue"/>
	</websocket:message-broker>

</beans>